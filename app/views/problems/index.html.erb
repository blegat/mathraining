<% provide(:title, @section.name) %>

<h1><%= title_2("Problèmes", @section.name) %>
<button class="information-tag" onclick="return Info.toggle();">?</button>
</h1>

<%= render 'shared/info', about: "problems" %>

<% if !has_enough_points(current_user) %>

  <!-- Si moins de 200 points, on ne peut rien voir -->
  <p class="fw-bold">
    Les problèmes ne sont accessibles qu'aux utilisateurs ayant un score d'au moins 200.
  </p>

<% else %>

<% problems = accessible_problems_from_section(current_user, @section, ["id", "number", "level", "online", "statement", "origin", "virtualtest_id", "nb_solves", "first_solve_time", "last_solve_time", "reviewed"]) %>
<% problems_by_level = problems.group_by{|p| p.level} %>
<% favorite_problems = current_user.favorite_problems.pluck(:id).to_set %>

<% if !current_user.admin? %>
  <% @num_subs_by_problem_and_status = current_user.submissions.where("problem_id IN (?)", problems.map(&:id)).group(:problem_id, :status).count %>
<% end %>

<% def get_num_subs_for_problem_and_statuses(problem, statuses) %>
  <% result = 0 %>
  <% statuses.each do |status| %>
    <% n = @num_subs_by_problem_and_status[[problem.id, status]] %>
    <% result += n unless n.nil? %>
  <% end %>
  <% return result %>
<% end %>

<% (1..5).each do |level| %>
  <h3>Niveau <%= level %></h3>
  <% if problems_by_level[level].nil? %>
    <p>Aucun problème de niveau <%= level %> n'est disponible.</p>
  <% else %>
    <p>Chaque problème de niveau <%= level %> vaut <b><%= 15*level %></b> points.</p>
    
    <% problems_by_level[level].each do |p| %>
      <% num_drafts = 0 %>
      <% num_correct_subs = 0 %>
      
      <% classe = "" %>
      <% if !p.online? %>
        <!-- Si pas en ligne : orange -->
        <% classe = "orangey" %>
      <% elsif current_user.admin? %>
        <!-- Si admin : jaune -->
        <% classe = "yellowy" %> 
      <% else %>
        <!-- Si étudiant et problème en ligne --> 
        <% num_correct_subs = get_num_subs_for_problem_and_statuses(p, ["correct"]) %>
        
        <% if num_correct_subs > 0 %>
          <!-- Si déjà résolu : vert -->
          <% classe = "greeny" %>
        <% else %>  
          <% num_waiting_subs = get_num_subs_for_problem_and_statuses(p, ["waiting", "waiting_forever"]) %>  
          <% num_incorrect_subs = get_num_subs_for_problem_and_statuses(p, ["wrong", "wrong_to_read", "plagiarized", "closed"]) %>
          <% num_drafts = get_num_subs_for_problem_and_statuses(p, ["draft"]) %>
          
          <% if num_waiting_subs > 0 %>
            <!-- Si une soumission pas encore corrigée : orange -->
            <% classe = "orangey" %>
          <% elsif num_incorrect_subs > 0 %>
            <!-- Si une soumission erronée : rouge -->
            <% classe = "redy" %>
          <% else %>
            <!-- Si aucune soumission (autre qu'un éventuel brouillon) : jaune -->
            <% classe = "yellowy" %>
          <% end %>
        <% end %>
      <% end %>
      
      <table class="table table-bordered problem <%= classe %>" id="problem<%= p.id %>">
      <tr><td class="title text-center">
      <h4>
      <%= link_to "Problème ##{ p.number }", problem_path(p, :auto => 1) %>
      <% if p.virtualtest_id > 0 %>
        - Test #<%= p.virtualtest.number %>
      <% end %>
      <%= "(en construction)" if !p.online %>
      
      <% if current_user.admin? || (current_user.corrector? && classe == "greeny") %>
        <% is_favorite = favorite_problems.include?(p.id) %>
        <%= image_tag "heart-fill.svg", :id => "heart-filled-#{p.id}", :class => "svg-black-white ms-1", :width => "22", :style => "margin-top:2px; float:right; cursor:pointer; display:#{is_favorite ? 'inline' : 'none'};", :onclick => "$.getScript('#{unmark_favorite_problem_url(p)}')" %>
        <%= image_tag "heart.svg", :id => "heart-#{p.id}", :class => "svg-black-white ms-1", :width => "22", :style => "margin-top:2px; float:right; cursor:pointer; display:#{is_favorite ? 'none' : 'inline'};", :onclick => "$.getScript('#{mark_favorite_problem_url(p)}')" %>
      <% end %>
      <% if current_user.root? && p.reviewed? %>
        <%= image_tag "check-lg", :class => "svg-black-white", :height => "22", :style => "margin-top:2px; margin-right:8px; float:right;" %>
      <% end %>
      </h4>
      </td></tr>
      
      <tr><td class="real-content">

      <div class="grid content"> <!-- 12 columns below 'md', 24 columns from 'md' (see module.scss) -->
        <% if num_drafts > 0 %>
          <div class="g-col-12 g-col-md-24 intro">
            <i>(Vous avez un brouillon enregistré pour ce problème.)</i>
          </div>
        <% end %>
        
        <div class="g-col-12 g-col-md-15 g-col-lg-16 g-col-xl-17 module left-part">
          <center><h5>Énoncé</h5></center>
          <%= htmlise(p.statement) %>
        </div>
        
        <div class="g-col-12 g-col-md-9 g-col-lg-8 g-col-xl-7 module right-part">
          <center><h5>Statistiques</h5></center>
          <% nb_sol = p.nb_solves %>
          <% if nb_sol >= 1 %>
            Résolu par <b><%= nb_sol %></b> personne<%= "s" if nb_sol > 1 %><br/>
            entre le <b><%= write_date_only(p.first_solve_time) %></b><br/>
            et le <b><%= write_date_only(p.last_solve_time) %></b>
          <% else %>
            <i>Jamais résolu</i>
          <% end %>
        </div>

        <!-- Origine si administrateur ou si résolu -->
        <% if (current_user.admin? || num_correct_subs > 0) && !p.origin.nil? && p.origin.size > 0 %>
          <div class="g-col-12 g-col-md-24 module bottom-part">
            Origine du problème : <b><%= p.origin %></b>
          </div>
        <% end %>
      </div>
      </td></tr>
      </table> 
    <% end %>
  <% end %>
<% end %>



<!-- Ajouter un problème -->
<% if signed_in? && current_user.admin? %>
  <p class="text-center">
    <%= link_to "Ajouter un problème", new_section_problem_path(@section) %>
  </p>
<% end %>

<% end %>
