<% provide(:title, "Soumissions") %>

<h1><%= title_1("Soumissions") %> <span style="font-size:20px;"> - <%= link_to "Tout voir", allsub_path %></span></h1>

<!-- Graphique du nombre de soumissions en attente -->
<% date_end = Time.now %>
<% date_begin_bad = date_end - 7.days %>
<% time_interval = 20.minutes %>
<% date_begin = date_begin_bad.beginning_of_hour %>
<% while date_begin + time_interval <= date_begin_bad %>
  <% date_begin = date_begin + time_interval %>
<% end %>
<% num_intervals = ((date_end - date_begin) / time_interval).ceil %>
<% new_sub = Array.new(num_intervals, 0) %>
<% new_cor = Array.new(num_intervals, 0) %>

<% Submission.select(:created_at, :intest, :problem_id, :user_id).where("visible = ? AND created_at > ?", true, date_begin).each do |s| %>
  <% date_sub = s.created_at %>
  <% if s.intest? %>
    <% p = s.problem %>
    <% t = p.virtualtest %>
    <% date_start = t.takentests.where(:user_id => s.user_id).first.taken_time %>
    <% date_sub = date_start + (t.duration).minutes %>
  <% end %>
  <% interval_id = [((date_sub - date_begin) / time_interval).floor, num_intervals-1].min %>
  <% new_sub[interval_id] = new_sub[interval_id] + 1 %>
<% end %>

<% Following.select(:created_at).where("kind = 1 AND created_at > ?", date_begin).each do |f| %>
  <% interval_id = [((f.created_at - date_begin) / time_interval).floor, num_intervals-1].min %>
  <% new_cor[interval_id] = new_cor[interval_id] + 1 %>
<% end %>

<% num_waiting_now = Submission.where(:status => :waiting, :visible => true).count %>
<% graph = Array.new(num_intervals+1, 0) %>
<% graph[num_intervals] = num_waiting_now %>
<% r = (num_intervals-1)..0 %>
<% (r.first).downto(r.last).each do |i| %>
  <% graph[i] = graph[i+1] + new_cor[i] - new_sub[i] %>
<% end %>
<% graph_maxi = graph.max+1 %>

<center>

<!-- Endroit pour dessiner le graphique des soumissions en attente -->
<div id="contenant" style="width:100%; max-width:900px; height:280px; position:relative; display:block; margin-top:20px; margin-bottom:10px;">
<canvas id="myCanvas" width="900" height="280" style="position:absolute; left:0px; top: 0px;">
Votre navigateur ne supporte pas les canvas.
</canvas>
</div>

</center>


<script type="text/javascript">
  $(document).ready( function(){

  //Get the canvas & context
  var c = $('#myCanvas');
  var ctx = c.get(0).getContext('2d');
  var container = $(c).parent();

  //Run function when browser  resize
  $(window).resize( respondCanvas );

  function respondCanvas(){
  c.attr('width', $(container).width() ); //max width
  c.attr('height', 280*$(container).width()/900.0); //max height

  document.getElementById('contenant').style.height = 280*$(container).width()/900.0 + "px"

  //Redraw & reposition content
  var x = c.width();
  var y = c.height();

  var pct = c.width()/900.0;
  
  // Rectangle et fond blanc
  ctx.beginPath();
  ctx.rect(pct*50, pct*5, pct*806, pct*250);
  ctx.fillStyle = 'white';
  ctx.fill(); 
  
  ctx.lineWidth = 1;
  ctx.strokeStyle = 'black';
  ctx.stroke();  
  
  // Labels axe des X
  ctx.font="12px Arial";
  ctx.fillStyle = 'black';
  ctx.textAlign = 'center';
  
  ctx.setLineDash([10, 10]);
  ctx.beginPath();
  
  if(pct > 0.6)
  {
    <% d = date_end %>
    <% num_days = 0 %>
    <% while(d > date_begin - 1.minute) %>
      <% ratio = (d - date_begin)/(date_end - date_begin) %>
      ctx.fillText("J-<%= num_days %>",pct*<%= 50+(800*ratio) %>,pct*265+7);
      <% num_days = num_days + 1 %>
      <% d = date_end - (num_days).days %>
    <% end %>
  }
  
  // Barres horizontales (et labels axe des Y)
  if (pct < 0.7)
  {
    ctx.font="9px Arial";
  }
  
  ctx.textAlign = 'right';
  ctx.lineWidth = 0.5;
  ctx.strokeStyle = 'grey';
  <% i = graph_maxi - 1 %>
  <% i_step = [(i/5.0).ceil, 1].max %>
  <% while(i > 0) %>
    haut = <%= 255-240*i/graph_maxi.to_f %>
    ctx.moveTo(pct*50, pct*(haut));
    ctx.lineTo(pct*856, pct*(haut));
    ctx.fillText("<%= i %>", pct*44-2, pct*(haut+4));
    <% i = i - i_step %>
  <% end %>
  ctx.stroke();
  
  // Graphique: entre 50 et 850 --> largeur totale 800, à diviser en num_intervals
  
  ctx.beginPath();
  ctx.moveTo(pct*850, pct*<%= 255 - 240*graph[num_intervals]/graph_maxi.to_f %>);
  ctx.strokeStyle = 'orange';
  ctx.setLineDash([]);
  ctx.lineWidth = 2;
  <% width_one_interval = 800.0 / num_intervals %>
  <% (r.first).downto(r.last).each do |i| %>
    ctx.lineTo(pct*<%= 50+(i+1)*width_one_interval %>, pct*<%= 255 - 240*graph[i]/graph_maxi.to_f %>);
  <% end %>
  ctx.stroke() 
  
  }

  //Initial call
  respondCanvas();

  });
</script>






<% if @notifications.size == 0 %>
  Il n'y a plus rien à corriger, beau boulot !
<% else %>

  <% if !current_user.sk.admin? %>
    <% problem_solved = Array.new %>
    <% current_user.sk.solvedproblems.select(:problem_id).each do |sp| %>
      <% problem_solved[sp.problem_id] = true %>
    <% end %>
  <% end %>

  <table class="table table-bordered">
  <tr><th style="text-align:center;">Statut</th><th class="hidden-small">Date de la soumission</th><th>Qui</th><th class="hidden-small">Correcteur</th><th style="text-align:center;">Type</th><th class="hidden-small" style="text-align:center;">Long.</th><th></th></tr>
  <% @notifications.each do |n| %>
    <% hidden_sub = (!current_user.sk.admin? && problem_solved[n.problem_id] != true) %>
    <%= render 'submissions/showline', s: n, hide_last_activity: true, show_section_and_level: true, hidden_sub: hidden_sub, show_num_waiting_days_from: "created_at", show_correctors: true, show_content_length: true %>
  <% end %>
  </table>

<% end %>
